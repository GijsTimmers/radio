#!/usr/bin/env python2
# -*- coding: utf-8 -*-
# PYTHON_ARGCOMPLETE_OK

## Dependencies:    mplayer, argparse, argcomplete, pyYAML
## Author:          Gijs Timmers: https://github.com/GijsTimmers

## Licence:         CC-BY-SA-4.0
##                  http://creativecommons.org/licenses/by-sa/4.0/

## This work is licensed under the Creative Commons
## Attribution-ShareAlike 4.0 International License. To  view a copy of
## this license, visit http://creativecommons.org/licenses/by-sa/4.0/ or
## send a letter to Creative Commons, PO Box 1866, Mountain View,
## CA 94042, USA.

import time
import threading
from colorama import Fore, Style

###############################################################################
def ok():
    print Style.BRIGHT + Fore.GREEN + "OK" + Fore.RESET + Style.RESET_ALL
def error():
    print Style.BRIGHT + Fore.RED + "ERROR" + Fore.RESET + Style.RESET_ALL

###############################################################################
print "Imports testen...",
try:
    import radio
    ok()
except Exception as e:
    error()
    print e.message, e.args
###############################################################################
print "Radio() instantiÃ«ren...",
try:
    rd = radio.Radio()
    ok()
except Exception as e:
    error()
    print e.message, e.args
###############################################################################
print "Variabelen testen...",
try:
    rd.parser
    rd.zenderdict
    ok()
except Exception as e:
    error()
    print e.message, e.args
###############################################################################
print "Afspeelmechanisme testen..."
try:
    for afkorting in rd.zenderdict.keys():
        #zender = rd.zenderdict[afkorting]["naam"].encode("utf-8")
        naam = rd.zenderdict[afkorting]["naam"]
        url  = rd.zenderdict[afkorting]["url"]
        
        t = threading.Thread(target=rd.afspelen, args=(naam, url))
        t.start()
        time.sleep(2)
        rd.stoppen()
        t.join()
        ok()
        #proces = rd.afspelen(zender, url)
        #time.sleep(2)
        #rd.stoppen()
except Exception as e:
    error()
    print e.message, e.args
###############################################################################