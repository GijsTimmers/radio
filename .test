#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# PYTHON_ARGCOMPLETE_OK

## Dependencies:    mplayer, argparse, argcomplete, pyYAML
## Author:          Gijs Timmers: https://github.com/GijsTimmers

## Licence:         CC-BY-SA-4.0
##                  http://creativecommons.org/licenses/by-sa/4.0/

## This work is licensed under the Creative Commons
## Attribution-ShareAlike 4.0 International License. To  view a copy of
## this license, visit http://creativecommons.org/licenses/by-sa/4.0/ or
## send a letter to Creative Commons, PO Box 1866, Mountain View,
## CA 94042, USA.

import sys
import time
import threading
import subprocess
from colorama import Fore, Style

###############################################################################
def ok():
    print(Style.BRIGHT + Fore.GREEN + "OK" + Fore.RESET + Style.RESET_ALL)
def error():
    print(Style.BRIGHT + Fore.RED + "ERROR" + Fore.RESET + Style.RESET_ALL)

###############################################################################
print("Imports testen...",  end="")
try:
    from yamlradio.yamlradio import main
    from yamlradio.keypress import Keypress
    from yamlradio.fabriek import Fabriek
    from yamlradio.parser import Parser
    from yamlradio.radio import Radio
    
    ok()
except Exception as e:
    error()
    print(e.message, e.args)
    exit(1)
###############################################################################
print("Radio() instantiëren...", end="")
try:
    rd = Radio()
    ok()
except Exception as e:
    error()
    print(e.message, e.args)
    exit(1)
###############################################################################
print("Fabriek() instantiëren...", end="")
try:
    fa = Fabriek()
    ok()
except Exception as e:
    error()
    print(e.message, e.args)
    exit(1)
###############################################################################
print("Variabelen testen...", end="")
try:
    pa = Parser()
    ok()
except Exception as e:
    error()
    print(e.message, e.args)
    exit(1)
###############################################################################
print("Afspeelmechanisme testen...")
afkortingenlijst = [combinatie["afk"] for combinatie \
in pa.zenderdict]
print(pa.zenderdict)
try:
    for combinatie in pa.zenderdict:
        naam = combinatie["naam"]
        url  = combinatie["url"]
        co = fa.returnCommunicatorObject("default")
        t = threading.Thread(target=rd.afspelen, args=(naam, url, co))
        t.start()
        time.sleep(3)
        rd.stoppen()
        t.join()
        #p = subprocess.Popen(["./yamlradio/yamlradio.py", afk])
        #time.sleep(3)
        #p.kill()
        ok()
except Exception as e:
    error()
    print(e.message, e.args)
    exit(1)

###############################################################################
